AWSTemplateFormatVersion: "2010-09-09"
Description: "VPC and Subnet CloudFormation Template"
Parameters:
  Env:
    Description: Environment
    Type: String
    MinLength: 1
    MaxLength: 255
    AllowedPattern: ^[a-zA-Z][-a-zA-Z0-9]*$
    Default: dev

Resources:
  # VPC
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: "10.0.0.0/16"
      EnableDnsSupport: "true"
      EnableDnsHostnames: "true"
      InstanceTenancy: "default"
      Tags:
        - Key: Name
          Value: !Sub "${Env}-vpc"
        - Key: Env
          Value: !Ref Env

  # InternetGateway
  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: !Sub "${Env}-igw"
        - Key: Env
          Value: !Ref Env
  Attachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref InternetGateway

  # Subnet
  PrivateSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Sub "${AWS::Region}a"
      CidrBlock: "10.0.0.0/24"
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub "${Env}-private-subnet1"
        - Key: Env
          Value: !Ref Env

  PrivateSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Sub "${AWS::Region}c"
      CidrBlock: "10.0.2.0/24"
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub "${Env}-private-subnet2"
        - Key: Env
          Value: !Ref Env

  PublicSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Sub "${AWS::Region}a"
      CidrBlock: "10.0.1.0/24"
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub "${Env}-public-subnet1"
        - Key: Env
          Value: !Ref Env
  PublicSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Sub "${AWS::Region}c"
      CidrBlock: "10.0.3.0/24"
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub "${Env}-public-subnet2"
        - Key: Env
          Value: !Ref Env

  # RouteTable
  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub "${Env}-public-rtb"
        - Key: Env
          Value: !Ref Env

  PublicRoute:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway

  # Subnet to attach
  PublicSubnetRouteTableAssociation1:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet1
      RouteTableId: !Ref PublicRouteTable

  PublicSubnetRouteTableAssociation2:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet2
      RouteTableId: !Ref PublicRouteTable

  PrivateRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub "${Env}-private-rtb"
        - Key: Env
          Value: !Ref Env

  PrivateSubnetRouteTableAssociation1:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PrivateSubnet1
      RouteTableId: !Ref PrivateRouteTable

  PrivateSubnetRouteTableAssociation2:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PrivateSubnet2
      RouteTableId: !Ref PrivateRouteTable

Outputs:
  VPCID:
    Description: VPC ID
    Value: !Ref VPC
    Export:
      Name: !Sub ${Env}VPCID

  VPCCidrBlock:
    Description: VPC CIDR
    Value: !GetAtt VPC.CidrBlock
    Export:
      Name: !Sub ${Env}VPCCidrBlock

  PublicSubnet1:
    Description: PublicSubnet1
    Value: !Ref PublicSubnet1
    Export:
      Name: !Sub ${Env}PublicSubnet1

  PublicSubnet2:
    Description: PublicSubnet2
    Value: !Ref PublicSubnet2
    Export:
      Name: !Sub ${Env}PublicSubnet2

  PrivateSubnet1:
    Description: PrivateSubnet1
    Value: !Ref PrivateSubnet1
    Export:
      Name: !Sub ${Env}PrivateSubnet1

  PrivateSubnet2:
    Description: PrivateSubnet2
    Value: !Ref PrivateSubnet2
    Export:
      Name: !Sub ${Env}PrivateSubnet2

  PublicRouteTable:
    Description: PublicRouteTable
    Value: !Ref PublicRouteTable
    Export:
      Name: !Sub ${Env}PublicRouteTable

  PrivateRouteTable:
    Description: PrivateRouteTable
    Value: !Ref PrivateRouteTable
    Export:
      Name: !Sub ${Env}PrivateRouteTable
